# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Core CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AZURE_WEBAPP_NAME: douglasnatanminimalapi   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '7.0.x'           # set this to the dot net version to use

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Checkout the repo
    - uses: actions/checkout@main
    
     # Setup .NET Core SDK
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }} 
    
     # Restore
    - name: Restore dependencies
      run: dotnet restore

     # Build
    - name: Build
      run: dotnet build --configuration Release

     # Test
    - name: Test
      run: dotnet test --no-build --verbosity normal

     # Publish
    - name: Publish
      run: dotnet publish -c Release --property:PublishDir='${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'
      
     # Artefacts
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: myapp/
        if-no-files-found: error

    # Deploy to Azure Web apps
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
        package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'
    
    # Docker Push Image
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USR}}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USR }}/minimalapi:latest